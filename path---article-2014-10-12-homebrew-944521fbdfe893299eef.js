webpackJsonp([0x742f6f6c86eb],{428:function(e,a){e.exports={data:{site:{siteMetadata:{title:"Urban Faubion / Design Technologist",author:"Urban Faubion"}},markdownRemark:{id:"/Users/urban/Documents/Projects/urban.github.io/data/article/2014-10-12-homebrew/index.md absPath of file >>> MarkdownRemark",html:'<p><a href="http://brew.sh/">Homebrew</a> is a package manager for OS X. It’s a fantastic tool I’ve been using it for years to download and install free Unix software. It makes it dead simple to install software and their dependencies with just one command. For instance, to install the version control system Git you only need to type the following into Terminal (Applications > Utilities):</p>\n<div class="gatsby-highlight">\n      <pre class="language-shell"><code class="language-shell">brew install git</code></pre>\n      </div>\n<p>In the past if you didn’t use a package manager like <a href="http://www.macports.org/">MacPorts</a> or <a href="http://www.finkproject.org/">Fink</a>, you would have to build each one manually from source. This was a tedious, error prone and time consuming task. For instance, the above one-liner would require the following steps on OS X:</p>\n<ol>\n<li>download</li>\n<li>unzip</li>\n<li>configure</li>\n<li>make</li>\n<li>install</li>\n</ol>\n<h2>Installing Homebrew</h2>\n<div class="alert note">\n  <strong>Note:</strong> You need the Xcode command line tools to install Homebrew. They come with Xcode however if you don\'t have Xcode already installed, OS X Mavericks (10.9) should auto-prompt you to.\n</div>\n<p>To <a href="http://brew.sh/#install">install Homebrew</a>, type the following into Terminal:</p>\n<div class="gatsby-highlight">\n      <pre class="language-shell"><code class="language-shell">ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code></pre>\n      </div>\n<p>This will download and install Homebrew under <code class="language-text">/usr/local</code> with the main script at <code class="language-text">/usr/local/bin/brew</code>. It will also create the directory <code class="language-text">/usr/local/Cellar/</code> where all the files for your <code class="language-text">brew</code> packages will be installed.</p>\n<p>With Homebrew installed, an easy way to familiarize yourself with it and the commands available is to run <code class="language-text">man brew</code> in Terminal.</p>\n<h2>Homebrew Cask</h2>\n<p><a href="http://caskroom.io/">Cask</a> is an extension of Homebrew for installing large binary applications. With it you can automate the installation of applications that can be built from source. With it, you’ll never have to drag and drop another GUI application to your Applications directory again.</p>\n<p>To install Cask, run the following in Terminal:</p>\n<div class="gatsby-highlight">\n      <pre class="language-shell"><code class="language-shell">brew install caskroom/cask/brew-cask</code></pre>\n      </div>\n<p>Once installed, you can use the <code class="language-text">cask</code> sub-command to install additional applications. For instance, you can install the Google Chrome browser with the following:</p>\n<div class="gatsby-highlight">\n      <pre class="language-shell"><code class="language-shell">brew cask install google-chrome</code></pre>\n      </div>\n<h2>Custom Install Scripts</h2>\n<p>One of the main reasons I use Homebrew and Cask is to automate the installation of a new computer or a projects system dependencies.</p>\n<div class="gatsby-highlight">\n      <pre class="language-shell"><code class="language-shell">#!/usr/bin/env bash\n\n# Make sure we’re using the latest Homebrew\nbrew update\n\n# Upgrade any already-installed formulae\nbrew upgrade\n\n# Add additional formulae lookup repos\n# Cask\nbrew tap caskroom/versions\n\n# Install formulas\nbrew install git\n\n# Install Cask\nbrew install caskroom/cask/brew-cask\n\nInstall Casks\nbrew cask install google-chrome\n\n# Remove outdated versions from the cellar\nbrew cleanup</code></pre>\n      </div>\n<div class="alert note">\n  <strong>Note:</strong> Since Homebrew and Cask understand interdependencies you can safely use it knowing it will skip previously installed dependencies without crashing your machine.\n</div>\n<p>Save this file and call it <code class="language-text">Homebrew.sh</code>. Since this is a script you need to change the mode to executable with the following command in Terminal:</p>\n<div class="gatsby-highlight">\n      <pre class="language-shell"><code class="language-shell">chmod a+x Homebrew.sh</code></pre>\n      </div>\n<p>Now you can run this script by typing <code class="language-text">./Homebrew.sh</code> in Terminal.</p>\n<h2>Conclusion</h2>\n<p>Homebrew and Casks are amazing tools to have in your toolbox. By crafting a small installer script, you can safely download, compile (if necessary) and automagically install everything you need without worrying about interdependencies hell. This can be really helpful when setting up a new machine by including it with your custom <a href="https://github.com/urban/dotfiles">dotfiles</a> repo.</p>',frontmatter:{title:"Homebrew",date:"October 12, 2014"}}},pathContext:{slug:"/article/2014-10-12-homebrew/",previous:{fields:{slug:"/article/2014-01-02-new-mac-setup/"},frontmatter:{title:"New Mac Setup",draft:null}},next:!1}}}});
//# sourceMappingURL=path---article-2014-10-12-homebrew-944521fbdfe893299eef.js.map